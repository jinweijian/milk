// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// SubscriptionsDao is the data access object for table subscriptions.
type SubscriptionsDao struct {
	table   string               // table is the underlying table name of the DAO.
	group   string               // group is the database configuration group name of current DAO.
	columns SubscriptionsColumns // columns contains all the column names of Table for convenient usage.
}

// SubscriptionsColumns defines and stores column names for table subscriptions.
type SubscriptionsColumns struct {
	Id                    string // 主键ID
	SubscriptionNo        string // 订阅单号
	Uid                   string // 用户ID
	Sku                   string // 商品ID
	IsSandbox             string // 是否是沙盒环境
	App                   string // 平台app名称
	Package               string // app包名称
	Channel               string // 支付渠道
	PayConfig             string // 生成时的支付配置信息
	SubscriptionId        string // 订阅ID
	Amount                string // 订单金额
	PurchaseToken         string // 用户订阅的最新的token
	Subject               string // 商品标题
	Body                  string // 商品描述
	Extra                 string // json支付额外数据
	OriginalTransactionId string // 第三方原始交易号
	Credential            string // json交易凭证
	Version               string // 订阅时app版本号
	Currency              string //
	SubscriptionPeriod    string // 订阅周期（单位：天）
	Status                string // 状态 -1: 已过期； 0 待付款； 1 - 订阅中； 2 - 订阅已失效； 3 - 订阅已暂停； 4 - 订阅已撤销；
	CreatedBy             string // 创建资源的用户标识
	CallbackUri           string // 回调地址
	CallbackResult        string // 回调结果
	Remark                string // 备注
	PayAccount            string // 支付账号
	Meta                  string // json自定义元数据
	ExpiredAt             string // 过期时间
	RefundedAt            string // 退款时间
	ReversedAt            string // 撤销时间
	CreatedAt             string // 创建时间
	UpdatedAt             string // 更新时间
	DeletedAt             string // 删除时间
	StartedAt             string // 订阅开始时间
	EndedAt               string // 订阅到期时间
}

//  subscriptionsColumns holds the columns for table subscriptions.
var subscriptionsColumns = SubscriptionsColumns{
	Id:                    "id",
	SubscriptionNo:        "subscription_no",
	Uid:                   "uid",
	Sku:                   "sku",
	IsSandbox:             "is_sandbox",
	App:                   "app",
	Package:               "package",
	Channel:               "channel",
	PayConfig:             "pay_config",
	SubscriptionId:        "subscription_id",
	Amount:                "amount",
	PurchaseToken:         "purchase_token",
	Subject:               "subject",
	Body:                  "body",
	Extra:                 "extra",
	OriginalTransactionId: "original_transaction_id",
	Credential:            "credential",
	Version:               "version",
	Currency:              "currency",
	SubscriptionPeriod:    "subscription_period",
	Status:                "status",
	CreatedBy:             "created_by",
	CallbackUri:           "callback_uri",
	CallbackResult:        "callback_result",
	Remark:                "remark",
	PayAccount:            "pay_account",
	Meta:                  "meta",
	ExpiredAt:             "expired_at",
	RefundedAt:            "refunded_at",
	ReversedAt:            "reversed_at",
	CreatedAt:             "created_at",
	UpdatedAt:             "updated_at",
	DeletedAt:             "deleted_at",
	StartedAt:             "started_at",
	EndedAt:               "ended_at",
}

// NewSubscriptionsDao creates and returns a new DAO object for table data access.
func NewSubscriptionsDao() *SubscriptionsDao {
	return &SubscriptionsDao{
		group:   "default",
		table:   "subscriptions",
		columns: subscriptionsColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *SubscriptionsDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *SubscriptionsDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *SubscriptionsDao) Columns() SubscriptionsColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *SubscriptionsDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *SubscriptionsDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *SubscriptionsDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
